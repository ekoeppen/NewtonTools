/*	File:		LanternNSEvents.f.h	Contains:	The events that a protoLanternClient can use.	Written by:	Jason Rukman	Copyright:	й 1997 by Apple Computer Inc. All rights reserved.	Obtained from NIE2.0 F1C2 build. 9/4/97*/defconst('kBinary,		17);	//еее CONFLICT ALERT: kbinary in framegluecommon is 17! changed for now	defconst('kevLantClass, "lant");// Events that the TLanternDriver instance can handledefconst('kevSendBuffer,			[ kevLantClass, "sndB" ]);	// Data, Size			|defconst('kevGetDeviceAddress,		[ kevLantClass, "gdva" ]);	// Destination, DestSize|defconst('kevGetLinkIntegrity,		[ kevLantClass, "glit" ]);	// 						|LinkAvailabledefconst('kevAddMulticastAddress,	[ kevLantClass, "amca" ]);	// Address				|defconst('kevDelMulticastAddress,	[ kevLantClass, "dmca" ]);	// Address				|// Optional events the TLanternDriver instance may handledefconst('kevSetPromiscuous,		[ kevLantClass, "prom" ]);	// Promiscuous			|defconst('kevGetThroughput,			[ kevLantClass, "getT" ]);	// 						|TotalThrough, RxThrough, TxThrough// Events that the TLanternDriver can generatedefconst('kevDriverFailure,			[ kevLantClass, "fail" ]);	// Error				|defconst('kevLinkIntegrity,			[ kevLantClass, "link" ]);	// LinkAvailable		|																//  <SEND ARGS>			| <REPLY ARGS>// Events generated by the TLanternTaskdefconst('kevCardReady,				[ kevLantClass, "card" ]);	// Ready				|defconst('kevCardInserted,			[ kevLantClass, "inst" ]);	// Inserted,Name		|defconst('kevNewPacketReady,		[ kevLantClass, "pkt " ]);	// PacketID, Size		|// Events handled by the TLanternTaskdefconst('kevReadBuffer	,			[ kevLantClass, "recB" ]);	// PacketID, Dest, Size	|defconst('kevSetPacketValidTime,	[ kevLantClass, "spvt" ]);	// MSecs				|defconst('kevSetPacketBufferSize,	[ kevLantClass, "spbs" ]);	// Size					|defconst('kevGetPacketBufferState,	[ kevLantClass, "gpbs" ]);	// 						|Count, BufferCount, BufferSize, ValidTimedefconst('kevGetRxStats,			[ kevLantClass, "gdrs" ]);	//						|BufferMax, Packets, PacketSize, Dropped, Ageddefconst('kevResetRxStats,			[ kevLantClass, "rdrs" ]);	//						|	defconst('kLanternNSEvents, [	[ 'evSendBuffer, 			kevSendBuffer,					[kBinary, kULong],			[]],	// Fixed 1669962;  AW & JR	[ 'evGetDeviceAddress, 		kevGetDeviceAddress,			[kBinary, kULong], 			[]],	[ 'evGetLinkIntegrity, 		kevGetLinkIntegrity,			[],							[kULong]],		[ 'evAddMulticastAddress, 	kevAddMulticastAddress,			[kBinary],					[]],			[ 'evDelMulticastAddress, 	kevDelMulticastAddress,			[kBinary],					[]],			[ 'evSetPromiscuous, 		kevSetPromiscuous,				[kULong],					[]],			[ 'evGetThroughput, 		kevGetThroughput,				[],							[kULong, kULong, kULong]],				[ 'evDriverFailure, 		kevDriverFailure,				[kULong],					[]],		[ 'evLinkIntegrity, 		kevLinkIntegrity,				[kULong],					[]],	[ 'evCardReady, 			kevCardReady,					[kULong],					[]],	[ 'evCardInserted, 			kevCardInserted,				[kBinary,kULong],			[]],	[ 'evNewPacketReady, 		kevNewPacketReady,				[kULong,kULong],			[]],	[ 'evReadBuffer, 			kevReadBuffer,					[kULong, kBinary, kULong],	[]],	[ 'evSetPacketValidTime,	kevSetPacketValidTime,			[kULong],					[]],	[ 'evSetPacketBufferSize, 	kevSetPacketBufferSize,			[kULong],					[]],	[ 'evGetPacketBufferState, 	kevGetPacketBufferState,		[], 						[kULong,kULong,kULong,kULong]],	[ 'evGetRxStats,		 	kevGetRxStats,					[],							[kULong,kULong,kULong,kULong,kULong]],	[ 'evResetRxStats, 			kevResetRxStats,				[],							[]],	]);